{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"+LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,4BAAIC,WCcDK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHNF,EAAKG,UCIrBS,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAW,MAAhB,SACI,uBACAA,UAAY,mCACZU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCARI,G,MAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACGJ,EAAMK,aCkBFC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,WACIC,KAAKC,SAAS,CAAEF,UAAU,M,oBAI9B,WACI,OAAIC,KAAKF,MAAMC,SACJ,0DAEJC,KAAKT,MAAMK,a,GAjBCM,aCoDZC,E,kDA5CX,aAAgB,IAAD,8BACX,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKV,MAAQ,CACTjB,OAAS,GACTyB,YAAY,IAJL,E,qDASf,WAAoB,IAAD,OACfG,MAAM,8CACD1C,MAAK,SAAA2C,GAAQ,OAAGA,EAASC,UACzB5C,MAAK,SAAA6C,GAAK,OAAK,EAAKX,SAAS,CAACpB,OAAQ+B,S,oBAO/C,WACI,MAAgCZ,KAAKF,MAA7BjB,EAAR,EAAQA,OAAQyB,EAAhB,EAAgBA,YACVO,EAAiBhC,EAAOiC,QAAO,SAAAC,GACjC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASX,EAAYU,kBAEzD,OAAInC,EAAOqC,OAIH,sBAAKzC,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAgBc,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUvB,OAAQgC,WAR3B,oBAAIpC,UAAY,KAAhB,yB,GA1BAyB,aCFnBiB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKhD1D,M","file":"static/js/main.904c9c6a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n         <img alt='Robots' src={`https://robohash.org/${id}?200x200`}/>\r\n         <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n         </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import  React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i)=> {\r\n                return (\r\n                    <Card key={Card.id} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email} \r\n                    />\r\n                );\r\n            })\r\n            } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className ='pa2'>\r\n            <input\r\n            className = 'pa3 ba b--green bg-lightest-blue'  \r\n            type='search' \r\n            placeholder='Search Robots'\r\n            onChange={ searchChange }/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '1px solid black', height:'500px'}}>\r\n         { props.children }\r\n        </div>)\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops! That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n// import { robots } from './robots';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass  App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield:''\r\n        \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=> response.json())\r\n            .then(users =>  this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(!robots.length){\r\n            return <h1 className = 'tc'>Loading</h1>\r\n        } else {\r\n            return(\r\n                <div className = 'tc'>\r\n                    <h1 className='f1' >Robo-Friends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}